version: '2.1'
services:

    ldap:
      image: osixia/openldap:1.2.5
      environment:
        - LDAP_ORGANISATION=SaxCloud
        - LDAP_DOMAIN=saxcloud.lan
        - LDAP_ADMIN_PASSWORD=7fYEkbN5sQfGacaU
      volumes:
        - ldap-database:/var/lib/ldap
        - ldap-config:/etc/ldap/slapd.d
      command: '--copy-service'
      restart: always
      networks:
        mailcow-network:
          aliases:
            - ldap

    phpldap:
      image: osixia/phpldapadmin:0.8.0
      restart: always
      environment:
        - PHPLDAPADMIN_LDAP_HOSTS=ldap
        - VIRTUAL_HOST=phpldap.${SXCDOMAIN}
        - VIRTUAL_PROTO=http
        - LETSENCRYPT_HOST=phpldap.${SXCDOMAIN}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - PHPLDAPADMIN_HTTPS=false
      networks:
        mailcow-network:

    nginx-proxy:
      image: jwilder/nginx-proxy:0.4.0
      restart: always
      volumes:
        - nginx-proxy-certs:/etc/nginx/certs:ro
        - nginx-proxy-vhost:/etc/nginx/vhost.d
        - /opt/docker-files/nginx-proxy/network_internal.conf:/etc/nginx/network_internal.conf
        - /usr/share/nginx/html
        - /var/run/docker.sock:/tmp/docker.sock:ro
      ports:
        - 80:80
        - 443:443
      labels:
        - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
      networks:
        mailcow-network:

    nginx-letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion:v1.11
      restart: always
      volumes:
        - nginx-proxy-certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
      volumes_from:
        - nginx-proxy
      networks:
        mailcow-network:

    mongo:
      image: mongo:4.0
      restart: always
      volumes:
        - mongo-db:/data/db
        - mongo-dump:/data/dump
      command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
      networks:
        mailcow-network:

    mongo-init-replica:
      image: mongo:4.0
      command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
      depends_on:
        - mongo
      networks:
        mailcow-network:

    rocketchat:
      image: rocketchat/rocket.chat:1.3.2
      command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo "Tried $$i times. Waiting 5 secs..."; sleep 5; done; (exit $$s)'
      restart: always
      volumes:
        - rocketchat-uploads:/app/uploads
      environment:
        - PORT=3000
        - ROOT_URL=http://localhost:3000
        - MONGO_URL=mongodb://mongo:27017/rocketchat
        - MONGO_OPLOG_URL=mongodb://mongo:27017/local
        - MAIL_URL=smtp://mail
        - VIRTUAL_HOST=chat.${SXCDOMAIN}
        - VIRTUAL_PORT=3000
        - VIRTUAL_PROTO=http
        - LETSENCRYPT_HOST=chat.${SXCDOMAIN}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - RESOLVE_TO_PROXY_IP=true
      depends_on:
        - mongo
      networks:
        mailcow-network:

    ncdb:
      image: mariadb:10.4.8
      restart: always
      environment:
        - MYSQL_ROOT_PASSWORD=QB02AxEhQcäa
        - MYSQL_DATABASE=nextcloud
        - MYSQL_USER=ncuser
        - MYSQL_PASSWORD=o0öGTWz3Wd/8
      volumes:
        - ncdb-data:/var/lib/mysql
      networks:
        mailcow-network:

    nc:
      image: nextcloud:stable
      restart: always
      depends_on:
        - ncdb
      volumes:
        - nc-nextcloud:/var/www/html
        - nc-apps:/var/www/html/custom_apps
        - nc-config:/var/www/html/config
        - nc-data:/var/www/html/data
      environment:
        - MYSQL_DATABASE=nextcloud
        - MYSQL_USER=ncuser
        - MYSQL_PASSWORD=o0öGTWz3Wd/8
        - MYSQL_HOST=ncdb
        - VIRTUAL_HOST=nc.${SXCDOMAIN}
        - VIRTUAL_PORT=80
        - VIRTUAL_PROTO=http
        - LETSENCRYPT_HOST=nc.${SXCDOMAIN}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - RESOLVE_TO_PROXY_IP=true
      networks:
        mailcow-network:

    office:
      image: collabora/code:4.0.6.1
      restart: always
      environment:
        - "domain=nc\\.${SXCDOMAINESC}"
        - "username=admin"
        - "password="
        - "SLEEPFORDEBUGGER=0"
        - VIRTUAL_HOST=cb.${SXCDOMAIN}
        - VIRTUAL_PORT=9980
        - VIRTUAL_PROTO=https
        - LETSENCRYPT_HOST=cb.${SXCDOMAIN}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - RESOLVE_TO_PROXY_IP=true
        - NETWORK_ACCESS=internal
      expose:
        - 9980
      cap_add:
        - MKNOD
      networks:
        mailcow-network:

    odoo:
      image: odoo:12.0
      restart: always
      depends_on:
        - odb
      environment:
        - VIRTUAL_HOST=odoo.${SXCDOMAIN}
        - VIRTUAL_PORT=8069
        - VIRTUAL_PROTO=http
        - LETSENCRYPT_HOST=odoo.${SXCDOMAIN}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - RESOLVE_TO_PROXY_IP=true
        - HOST=odb
        - USER=odoo
        - PASSWORD=Start01a
      volumes:
        - odoo-web-data:/var/lib/odoo
        - odoo-config:/etc/odoo
        - odoo-addons:/mnt/extra-addons
      networks:
        mailcow-network:

    odb:
      image: postgres:10
      restart: always
      environment:
        - POSTGRES_DB=postgres
        - POSTGRES_PASSWORD=Start01a
        - POSTGRES_USER=odoo
        - PGDATA=/var/lib/postgresql/data/pgdata
      volumes:
        - odb-data:/var/lib/postgresql/data/pgdata
      networks:
        mailcow-network:

    unbound-mailcow:
      image: mailcow/unbound:1.7
      restart: always
      build: ./data/Dockerfiles/unbound
      command: /usr/sbin/unbound
      environment:
        - TZ=${TZ}
      volumes:
        - ./data/conf/unbound/unbound.conf:/etc/unbound/unbound.conf:ro
      restart: always
      tty: true
      networks:
        mailcow-network:
          ipv4_address: ${IPV4_NETWORK:-172.22.1}.254
          aliases:
            - unbound

    mysql-mailcow:
      image: mariadb:10.2
      restart: always
      volumes:
        - mysql-vol-1:/var/lib/mysql/
        - mysql-socket-vol-1:/var/run/mysqld/
        - ./data/conf/mysql/:/etc/mysql/conf.d/:ro
      environment:
        - TZ=${TZ}
        - MYSQL_ROOT_PASSWORD=${DBROOT}
        - MYSQL_DATABASE=${DBNAME}
        - MYSQL_USER=${DBUSER}
        - MYSQL_PASSWORD=${DBPASS}
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      ports:
        - "${SQL_PORT:-127.0.0.1:13306}:3306"
      networks:
        mailcow-network:
          aliases:
            - mysql

    redis-mailcow:
      image: redis:5-alpine
      volumes:
        - redis-vol-1:/data/
      restart: always
      environment:
        - TZ=${TZ}
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          ipv4_address: ${IPV4_NETWORK:-172.22.1}.249
          aliases:
            - redis

    clamd-mailcow:
      image: mailcow/clamd:1.24
      build: ./data/Dockerfiles/clamd
      restart: always
      environment:
        - TZ=${TZ}
        - SKIP_CLAMD=${SKIP_CLAMD:-n}
      volumes:
        - ./data/conf/clamav/:/etc/clamav/
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          aliases:
            - clamd

    rspamd-mailcow:
      image: mailcow/rspamd:1.43
      build: ./data/Dockerfiles/rspamd
      stop_grace_period: 30s
      depends_on:
        - nginx-mailcow
        - dovecot-mailcow
      environment:
        - TZ=${TZ}
      volumes:
        - ./data/conf/rspamd/custom/:/etc/rspamd/custom
        - ./data/conf/rspamd/override.d/:/etc/rspamd/override.d
        - ./data/conf/rspamd/local.d/:/etc/rspamd/local.d
        - ./data/conf/rspamd/plugins.d/:/etc/rspamd/plugins.d
        - ./data/conf/rspamd/lua/:/etc/rspamd/lua/:ro
        - ./data/conf/rspamd/rspamd.conf.local:/etc/rspamd/rspamd.conf.local
        - ./data/conf/rspamd/rspamd.conf.override:/etc/rspamd/rspamd.conf.override
        - rspamd-vol-1:/var/lib/rspamd
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      hostname: rspamd
      networks:
        mailcow-network:
          aliases:
            - rspamd

    php-fpm-mailcow:
      image: mailcow/phpfpm:1.41
      build: ./data/Dockerfiles/phpfpm
      command: "php-fpm -d date.timezone=${TZ} -d expose_php=0"
      depends_on:
        - redis-mailcow
      volumes:
        - ./data/web:/web:rw
        - ./data/conf/rspamd/dynmaps:/dynmaps:ro
        - rspamd-vol-1:/var/lib/rspamd
        - mysql-socket-vol-1:/var/run/mysqld/
        - ./data/conf/sogo/:/etc/sogo/
        - ./data/conf/rspamd/meta_exporter:/meta_exporter:ro
        - ./data/conf/phpfpm/sogo-sso/:/etc/sogo-sso/
        - ./data/conf/phpfpm/php-fpm.d/pools.conf:/usr/local/etc/php-fpm.d/z-pools.conf
        - ./data/conf/phpfpm/php-conf.d/opcache-recommended.ini:/usr/local/etc/php/conf.d/opcache-recommended.ini
        - ./data/conf/phpfpm/php-conf.d/upload.ini:/usr/local/etc/php/conf.d/upload.ini
        - ./data/conf/phpfpm/php-conf.d/other.ini:/usr/local/etc/php/conf.d/zzz-other.ini
        - ./data/assets/templates:/tpls
      environment:
        - LOG_LINES=${LOG_LINES:-9999}
        - TZ=${TZ}
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
        - IMAP_PORT=${IMAP_PORT:-143}
        - IMAPS_PORT=${IMAPS_PORT:-993}
        - POP_PORT=${POP_PORT:-110}
        - POPS_PORT=${POPS_PORT:-995}
        - SIEVE_PORT=${SIEVE_PORT:-4190}
        - SUBMISSION_PORT=${SUBMISSION_PORT:-587}
        - SMTPS_PORT=${SMTPS_PORT:-465}
        - SMTP_PORT=${SMTP_PORT:-25}
        - API_KEY=${API_KEY:-invalid}
        - API_ALLOW_FROM=${API_ALLOW_FROM:-invalid}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-mailcow-dockerized}
        - SKIP_SOLR=${SKIP_SOLR:-y}
        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          aliases:
            - phpfpm

    sogo-mailcow:
      image: mailcow/sogo:1.54
      build: ./data/Dockerfiles/sogo
      environment:
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
        - TZ=${TZ}
        - LOG_LINES=${LOG_LINES:-9999}
        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
        - ACL_ANYONE=${ACL_ANYONE:-disallow}
        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
      volumes:
        - ./data/conf/sogo/:/etc/sogo/
        - ./data/web/inc/init_db.inc.php:/init_db.inc.php
        - ./data/conf/sogo/custom-sogo.js:/usr/lib/GNUstep/SOGo/WebServerResources/js/custom-sogo.js
        - mysql-socket-vol-1:/var/run/mysqld/
        - sogo-web-vol-1:/sogo_web
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          ipv4_address: ${IPV4_NETWORK:-172.22.1}.248
          aliases:
            - sogo

    dovecot-mailcow:
      image: mailcow/dovecot:1.79
      build: ./data/Dockerfiles/dovecot
      cap_add:
        - NET_BIND_SERVICE
      volumes:
        - ./data/conf/dovecot:/usr/local/etc/dovecot
        - ./data/assets/ssl:/etc/ssl/mail/:ro
        - ./data/conf/sogo/:/etc/sogo/
        - ./data/conf/phpfpm/sogo-sso/:/etc/phpfpm/
        - vmail-vol-1:/var/vmail
        - vmail-attachments-vol-1:/var/attachments
        - crypt-vol-1:/mail_crypt/
        - ./data/conf/rspamd/custom/:/etc/rspamd/custom
        - ./data/assets/templates:/templates
        - rspamd-vol-1:/var/lib/rspamd
        - mysql-socket-vol-1:/var/run/mysqld/
      environment:
        - LOG_LINES=${LOG_LINES:-9999}
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
        - TZ=${TZ}
        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
        - MAILDIR_GC_TIME=${MAILDIR_GC_TIME:-1440}
        - ACL_ANYONE=${ACL_ANYONE:-disallow}
        - SKIP_SOLR=${SKIP_SOLR:-y}
        - MAILDIR_SUB=${MAILDIR_SUB:-}
      ports:
        - "${DOVEADM_PORT:-127.0.0.1:19991}:12345"
        - "${IMAP_PORT:-143}:143"
        - "${IMAPS_PORT:-993}:993"
        - "${POP_PORT:-110}:110"
        - "${POPS_PORT:-995}:995"
        - "${SIEVE_PORT:-4190}:4190"
      restart: always
      tty: true
      ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      hostname: ${MAILCOW_HOSTNAME}
      networks:
        mailcow-network:
          ipv4_address: ${IPV4_NETWORK:-172.22.1}.250
          aliases:
            - dovecot

    postfix-mailcow:
      image: mailcow/postfix:1.33
      build: ./data/Dockerfiles/postfix
      volumes:
        - ./data/conf/postfix:/opt/postfix/conf
        - ./data/assets/ssl:/etc/ssl/mail/:ro
        - postfix-vol-1:/var/spool/postfix
        - crypt-vol-1:/var/lib/zeyple
        - rspamd-vol-1:/var/lib/rspamd
        - mysql-socket-vol-1:/var/run/mysqld/
      environment:
        - LOG_LINES=${LOG_LINES:-9999}
        - TZ=${TZ}
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
      cap_add:
        - NET_BIND_SERVICE
      ports:
        - "${SMTP_PORT:-25}:25"
        - "${SMTPS_PORT:-465}:465"
        - "${SUBMISSION_PORT:-587}:587"
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      hostname: ${MAILCOW_HOSTNAME}
      networks:
        mailcow-network:
          aliases:
            - postfix

    memcached-mailcow:
      image: memcached:alpine
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          aliases:
            - memcached

    nginx-mailcow:
      depends_on:
        - sogo-mailcow
        - php-fpm-mailcow
        - redis-mailcow
      image: nginx:mainline-alpine
      command: /bin/sh -c "envsubst < /etc/nginx/conf.d/templates/listen_plain.template > /etc/nginx/conf.d/listen_plain.active &&
        envsubst < /etc/nginx/conf.d/templates/listen_ssl.template > /etc/nginx/conf.d/listen_ssl.active &&
        envsubst < /etc/nginx/conf.d/templates/server_name.template > /etc/nginx/conf.d/server_name.active &&
        envsubst < /etc/nginx/conf.d/templates/sogo.template > /etc/nginx/conf.d/sogo.active &&
        envsubst < /etc/nginx/conf.d/templates/sogo_eas.template > /etc/nginx/conf.d/sogo_eas.active &&
        . /etc/nginx/conf.d/templates/sogo.auth_request.template.sh > /etc/nginx/conf.d/sogo_proxy_auth.active &&
        nginx -qt &&
        until ping phpfpm -c1 > /dev/null; do sleep 1; done &&
        until ping sogo -c1 > /dev/null; do sleep 1; done &&
        until ping redis -c1 > /dev/null; do sleep 1; done &&
        until ping rspamd -c1 > /dev/null; do sleep 1; done &&
        exec nginx -g 'daemon off;'"
      environment:
        - HTTPS_PORT=${HTTPS_PORT:-443}
        - HTTP_PORT=${HTTP_PORT:-80}
        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
        - TZ=${TZ}
        - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
        - VIRTUAL_HOST=${MAILCOW_HOSTNAME}
        - VIRTUAL_PORT=80
        - VIRTUAL_PROTO=http
        - LETSENCRYPT_HOST=${MAILCOW_HOSTNAME}
        - LETSENCRYPT_EMAIL=info@saxcloud.de
        - RESOLVE_TO_PROXY_IP=true
      volumes:
        - ./data/web:/web:ro
        - ./data/conf/rspamd/dynmaps:/dynmaps:ro
        - ./data/assets/ssl/:/etc/ssl/mail/:ro
        - ./data/conf/nginx/:/etc/nginx/conf.d/:rw
        - ./data/conf/rspamd/meta_exporter:/meta_exporter:ro
        - sogo-web-vol-1:/usr/lib/GNUstep/SOGo/
#      ports:
#        - "${HTTPS_BIND:-0.0.0.0}:${HTTPS_PORT:-443}:${HTTPS_PORT:-443}"
#        - "${HTTP_BIND:-0.0.0.0}:${HTTP_PORT:-80}:${HTTP_PORT:-80}"
      restart: always
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          aliases:
            - nginx

    acme-mailcow:
      depends_on:
        - nginx-mailcow
      image: mailcow/acme:1.57
      build: ./data/Dockerfiles/acme
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      environment:
        - LOG_LINES=${LOG_LINES:-9999}
        - ADDITIONAL_SAN=${ADDITIONAL_SAN}
        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
        - SKIP_LETS_ENCRYPT=${SKIP_LETS_ENCRYPT:-n}
        - SKIP_IP_CHECK=${SKIP_IP_CHECK:-n}
        - SKIP_HTTP_VERIFICATION=${SKIP_HTTP_VERIFICATION:-n}
        - ONLY_MAILCOW_HOSTNAME=${ONLY_MAILCOW_HOSTNAME:-n}
        - LE_STAGING=${LE_STAGING:-n}
        - TZ=${TZ}
      volumes:
        - ./data/web/.well-known/acme-challenge:/var/www/acme:rw
        - ./data/assets/ssl:/var/lib/acme/:rw
        - ./data/assets/ssl-example:/var/lib/ssl-example/:ro
        - mysql-socket-vol-1:/var/run/mysqld/
      restart: always
      networks:
        mailcow-network:
          aliases:
            - acme

    netfilter-mailcow:
      image: mailcow/netfilter:1.27
      build: ./data/Dockerfiles/netfilter
      stop_grace_period: 30s
      depends_on:
        - dovecot-mailcow
        - postfix-mailcow
        - sogo-mailcow
        - php-fpm-mailcow
        - redis-mailcow
      restart: always
      privileged: true
      environment:
        - TZ=${TZ}
        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
        - IPV6_NETWORK=${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}
        - SNAT_TO_SOURCE=${SNAT_TO_SOURCE:-n}
        - SNAT6_TO_SOURCE=${SNAT6_TO_SOURCE:-n}
      network_mode: "host"
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      volumes:
        - /lib/modules:/lib/modules:ro

    watchdog-mailcow:
      image: mailcow/watchdog:1.47
      # Debug
      #command: /watchdog.sh
      build: ./data/Dockerfiles/watchdog
      volumes:
        - rspamd-vol-1:/var/lib/rspamd
        - mysql-socket-vol-1:/var/run/mysqld/
        - ./data/assets/ssl:/etc/ssl/mail/:ro
      restart: always
      environment:
        - LOG_LINES=${LOG_LINES:-9999}
        - TZ=${TZ}
        - DBNAME=${DBNAME}
        - DBUSER=${DBUSER}
        - DBPASS=${DBPASS}
        - USE_WATCHDOG=${USE_WATCHDOG:-n}
        - WATCHDOG_NOTIFY_EMAIL=${WATCHDOG_NOTIFY_EMAIL}
        - WATCHDOG_NOTIFY_BAN=${WATCHDOG_NOTIFY_BAN:-y}
        - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
        - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
        - IP_BY_DOCKER_API=${IP_BY_DOCKER_API:-0}
        - CHECK_UNBOUND=${CHECK_UNBOUND:-1}
        - SKIP_CLAMD=${SKIP_CLAMD:-n}
        - SKIP_LETS_ENCRYPT=${SKIP_LETS_ENCRYPT:-n}
        - HTTPS_PORT=${HTTPS_PORT:-443}
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      networks:
        mailcow-network:
          aliases:
            - watchdog

    dockerapi-mailcow:
      image: mailcow/dockerapi:1.30
      restart: always
      build: ./data/Dockerfiles/dockerapi
      oom_kill_disable: true
      environment:
        - DBROOT=${DBROOT}
        - TZ=${TZ}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
      networks:
        mailcow-network:
          aliases:
            - dockerapi

    solr-mailcow:
      image: mailcow/solr:1.5
      build: ./data/Dockerfiles/solr
      restart: always
      volumes:
        - solr-vol-1:/opt/solr/server/solr/dovecot-fts/data
      dns:
        - ${IPV4_NETWORK:-172.22.1}.254
      environment:
        - TZ=${TZ}
        - SOLR_HEAP=${SOLR_HEAP:-1024}
        - SKIP_SOLR=${SKIP_SOLR:-y}
      networks:
        mailcow-network:
          aliases:
            - solr

    olefy-mailcow:
      image: mailcow/olefy:1.0
      restart: always
      build: ./data/Dockerfiles/olefy
      environment:
        - OLEFY_BINDADDRESS=0.0.0.0
        - OLEFY_BINDPORT=10055
        - OLEFY_TMPDIR=/tmp
        - OLEFY_PYTHON_PATH=/usr/bin/python3
        - OLEFY_OLEVBA_PATH=/usr/bin/olevba3
        - OLEFY_LOGLVL=20
        - OLEFY_MINLENGTH=500
        - OLEFY_DEL_TMP=1
      networks:
        mailcow-network:
          aliases:
            - olefy

    ipv6nat-mailcow:
      depends_on:
        - unbound-mailcow
        - mysql-mailcow
        - redis-mailcow
        - clamd-mailcow
        - rspamd-mailcow
        - php-fpm-mailcow
        - sogo-mailcow
        - dovecot-mailcow
        - postfix-mailcow
        - memcached-mailcow
        - nginx-mailcow
        - acme-mailcow
        - netfilter-mailcow
        - watchdog-mailcow
        - dockerapi-mailcow
        - solr-mailcow
      image: robbertkl/ipv6nat
      restart: always
      privileged: true
      network_mode: "host"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /lib/modules:/lib/modules:ro

networks:
  mailcow-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-mailcow
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: ${IPV4_NETWORK:-172.22.1}.0/24
        - subnet: ${IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}

volumes:
  # Storage for email files
  vmail-vol-1:
  # Storage for attachments (deduplicated)
  vmail-attachments-vol-1:
  mysql-vol-1:
  mysql-socket-vol-1:
  redis-vol-1:
  rspamd-vol-1:
  solr-vol-1:
  postfix-vol-1:
  crypt-vol-1:
  sogo-web-vol-1:
  nginx-proxy-certs:
  nginx-proxy-vhost:
  mongo-db:
  mongo-dump:
  rocketchat-uploads:
  ncdb-data:
  nc-nextcloud:
  nc-apps:
  nc-config:
  nc-data:
  odoo-web-data:
  odoo-config:
  odoo-addons:
  odb-data:
  ldap-database:
  ldap-config:
